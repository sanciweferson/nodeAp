{
  "version": 3,
  "sources": ["../../src/regex/replace-variables.ts"],
  "sourcesContent": ["/**\n * This function takes a string and replace {variables} with given values.\n */\nexport function replaceVariables(\n  value: string,\n  variablesOrCallback: Record<string, string | number> | ((match: string) => string),\n) {\n  // Replace all variables (example: {{ baseurl }} with an HTML tag)\n  const doubleCurlyBrackets = /{{\\s*([\\w.-]+)\\s*}}/g\n  const singleCurlyBrackets = /{\\s*([\\w.-]+)\\s*}/g\n\n  const callback = (_: string, match: string): string => {\n    if (typeof variablesOrCallback === 'function') {\n      return variablesOrCallback(match)\n    }\n    return variablesOrCallback[match]?.toString() || `{${match}}`\n  }\n\n  // Loop through all matches and replace the match with the variable value\n  return value.replace(doubleCurlyBrackets, callback).replace(singleCurlyBrackets, callback)\n}\n"],
  "mappings": "AAGO,SAAS,iBACd,OACA,qBACA;AAEA,QAAM,sBAAsB;AAC5B,QAAM,sBAAsB;AAE5B,QAAM,WAAW,CAAC,GAAW,UAA0B;AACrD,QAAI,OAAO,wBAAwB,YAAY;AAC7C,aAAO,oBAAoB,KAAK;AAAA,IAClC;AACA,WAAO,oBAAoB,KAAK,GAAG,SAAS,KAAK,IAAI,KAAK;AAAA,EAC5D;AAGA,SAAO,MAAM,QAAQ,qBAAqB,QAAQ,EAAE,QAAQ,qBAAqB,QAAQ;AAC3F;",
  "names": []
}
