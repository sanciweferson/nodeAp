{
  "version": 3,
  "sources": ["../../src/url/make-url-absolute.ts"],
  "sourcesContent": ["import { combineUrlAndPath } from '@/url/merge-urls'\n\n/**\n * Converts a relative URL to an absolute URL using the provided base URL or current window location.\n * @param url - The URL to make absolute\n * @param options - Configuration options\n * @param options.baseUrl - Optional base URL to resolve against (defaults to window.location.href)\n * @param options.basePath - If provided, combines with baseUrl or window.location.origin before resolving\n * @returns The absolute URL, or the original URL if it's already absolute or invalid\n */\nexport const makeUrlAbsolute = (\n  url: string,\n  {\n    /** Optional base URL to resolve against (defaults to window.location.href) */\n    baseUrl,\n    /** If we have a basePath then we resolve against window.location.origin + basePath */\n    basePath,\n  }: {\n    baseUrl?: string\n    basePath?: string\n  } = {},\n): string => {\n  // If no base URL provided and we're not in a browser environment, return as-is\n  if (typeof window === 'undefined' && !baseUrl) {\n    return url\n  }\n\n  try {\n    // If we can create a URL object without a base, it's already absolute\n    new URL(url)\n    return url\n  } catch {\n    // URL is relative, proceed with resolution\n  }\n\n  // Use URL constructor which handles path normalization automatically\n  try {\n    let base = baseUrl || window.location.href\n\n    // If basePath is provided, combine it with the base URL\n    if (basePath) {\n      const origin = baseUrl ? new URL(baseUrl).origin : window.location.origin\n      base = combineUrlAndPath(origin, basePath + '/')\n    }\n\n    return new URL(url, base).toString()\n  } catch {\n    // If URL construction fails, return the original URL\n    return url\n  }\n}\n"],
  "mappings": "AAAA,SAAS,yBAAyB;AAU3B,MAAM,kBAAkB,CAC7B,KACA;AAAA;AAAA,EAEE;AAAA;AAAA,EAEA;AACF,IAGI,CAAC,MACM;AAEX,MAAI,OAAO,WAAW,eAAe,CAAC,SAAS;AAC7C,WAAO;AAAA,EACT;AAEA,MAAI;AAEF,QAAI,IAAI,GAAG;AACX,WAAO;AAAA,EACT,QAAQ;AAAA,EAER;AAGA,MAAI;AACF,QAAI,OAAO,WAAW,OAAO,SAAS;AAGtC,QAAI,UAAU;AACZ,YAAM,SAAS,UAAU,IAAI,IAAI,OAAO,EAAE,SAAS,OAAO,SAAS;AACnE,aAAO,kBAAkB,QAAQ,WAAW,GAAG;AAAA,IACjD;AAEA,WAAO,IAAI,IAAI,KAAK,IAAI,EAAE,SAAS;AAAA,EACrC,QAAQ;AAEN,WAAO;AAAA,EACT;AACF;",
  "names": []
}
