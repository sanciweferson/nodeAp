{
  "version": 3,
  "sources": ["../../src/http/http-info.ts"],
  "sourcesContent": ["import type { HttpMethod } from './http-methods'\n\nexport type HttpInfo = {\n  short: string\n  colorClass: `text-${string}`\n  colorVar: `var(--scalar-color-${string})`\n  backgroundColor: string\n}\n\n/**\n * HTTP methods in a specific order\n * Do not change the order\n */\nexport const REQUEST_METHODS = {\n  get: {\n    short: 'GET',\n    colorClass: 'text-blue',\n    colorVar: 'var(--scalar-color-blue)',\n    backgroundColor: 'bg-blue/10',\n  },\n  post: {\n    short: 'POST',\n    colorClass: 'text-green',\n    colorVar: 'var(--scalar-color-green)',\n    backgroundColor: 'bg-green/10',\n  },\n  put: {\n    short: 'PUT',\n    colorClass: 'text-orange',\n    colorVar: 'var(--scalar-color-orange)',\n    backgroundColor: 'bg-orange/10',\n  },\n  patch: {\n    short: 'PATCH',\n    colorClass: 'text-yellow',\n    colorVar: 'var(--scalar-color-yellow)',\n    backgroundColor: 'bg-yellow/10',\n  },\n  delete: {\n    short: 'DEL',\n    colorClass: 'text-red',\n    colorVar: 'var(--scalar-color-red)',\n    backgroundColor: 'bg-red/10',\n  },\n  options: {\n    short: 'OPTS',\n    colorClass: 'text-purple',\n    colorVar: 'var(--scalar-color-purple)',\n    backgroundColor: 'bg-purple/10',\n  },\n  head: {\n    short: 'HEAD',\n    colorClass: 'text-c-2',\n    colorVar: 'var(--scalar-color-2)',\n    backgroundColor: 'bg-c-2/10',\n  },\n  connect: {\n    short: 'CONN',\n    colorClass: 'text-c-2',\n    colorVar: 'var(--scalar-color-2)',\n    backgroundColor: 'bg-c-2/10',\n  },\n  trace: {\n    short: 'TRACE',\n    colorClass: 'text-c-2',\n    colorVar: 'var(--scalar-color-2)',\n    backgroundColor: 'bg-c-2/10',\n  },\n} as const satisfies Record<HttpMethod, HttpInfo>\n\n/**\n * Accepts an HTTP Method name and returns some properties for the tag\n */\nexport const getHttpMethodInfo = (methodName: string) => {\n  const normalizedMethod = methodName.trim().toLowerCase() as HttpMethod\n  return (\n    REQUEST_METHODS[normalizedMethod] ?? {\n      short: normalizedMethod,\n      color: 'text-c-2',\n      backgroundColor: 'bg-c-2',\n    }\n  )\n}\n"],
  "mappings": "AAaO,MAAM,kBAAkB;AAAA,EAC7B,KAAK;AAAA,IACH,OAAO;AAAA,IACP,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,iBAAiB;AAAA,EACnB;AAAA,EACA,MAAM;AAAA,IACJ,OAAO;AAAA,IACP,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,iBAAiB;AAAA,EACnB;AAAA,EACA,KAAK;AAAA,IACH,OAAO;AAAA,IACP,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,iBAAiB;AAAA,EACnB;AAAA,EACA,OAAO;AAAA,IACL,OAAO;AAAA,IACP,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,iBAAiB;AAAA,EACnB;AAAA,EACA,QAAQ;AAAA,IACN,OAAO;AAAA,IACP,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,iBAAiB;AAAA,EACnB;AAAA,EACA,SAAS;AAAA,IACP,OAAO;AAAA,IACP,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,iBAAiB;AAAA,EACnB;AAAA,EACA,MAAM;AAAA,IACJ,OAAO;AAAA,IACP,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,iBAAiB;AAAA,EACnB;AAAA,EACA,SAAS;AAAA,IACP,OAAO;AAAA,IACP,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,iBAAiB;AAAA,EACnB;AAAA,EACA,OAAO;AAAA,IACL,OAAO;AAAA,IACP,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,iBAAiB;AAAA,EACnB;AACF;AAKO,MAAM,oBAAoB,CAAC,eAAuB;AACvD,QAAM,mBAAmB,WAAW,KAAK,EAAE,YAAY;AACvD,SACE,gBAAgB,gBAAgB,KAAK;AAAA,IACnC,OAAO;AAAA,IACP,OAAO;AAAA,IACP,iBAAiB;AAAA,EACnB;AAEJ;",
  "names": []
}
