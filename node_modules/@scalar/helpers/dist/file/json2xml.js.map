{
  "version": 3,
  "sources": ["../../src/file/json2xml.ts"],
  "sourcesContent": ["/**\n * This function converts an object to XML.\n */\nexport function json2xml(data: Record<string, any>, tab?: string) {\n  const toXml = (value: any, key: string, indentation: string) => {\n    let xml = ''\n\n    if (Array.isArray(value)) {\n      for (let i = 0, n = value.length; i < n; i++) {\n        xml += indentation + toXml(value[i], key, indentation + '\\t') + '\\n'\n      }\n    } else if (typeof value === 'object') {\n      let hasChild = false\n      xml += indentation + '<' + key\n\n      for (const m in value) {\n        if (m.charAt(0) === '@') {\n          xml += ' ' + m.substr(1) + '=\"' + value[m].toString() + '\"'\n        } else {\n          hasChild = true\n        }\n      }\n\n      xml += hasChild ? '>' : '/>'\n\n      if (hasChild) {\n        for (const m in value) {\n          if (m === '#text') {\n            xml += value[m]\n          } else if (m === '#cdata') {\n            xml += '<![CDATA[' + value[m] + ']]>'\n          } else if (m.charAt(0) !== '@') {\n            xml += toXml(value[m], m, indentation + '\\t')\n          }\n        }\n        xml += (xml.charAt(xml.length - 1) === '\\n' ? indentation : '') + '</' + key + '>'\n      }\n    } else {\n      xml += indentation + '<' + key + '>' + value.toString() + '</' + key + '>'\n    }\n    return xml\n  }\n\n  let xml = ''\n\n  for (const key in data) {\n    if (Object.hasOwn(data, key)) {\n      xml += toXml(data[key], key, '')\n    }\n  }\n\n  return tab ? xml.replace(/\\t/g, tab) : xml.replace(/\\t|\\n/g, '')\n}\n"],
  "mappings": "AAGO,SAAS,SAAS,MAA2B,KAAc;AAChE,QAAM,QAAQ,CAAC,OAAY,KAAa,gBAAwB;AAC9D,QAAIA,OAAM;AAEV,QAAI,MAAM,QAAQ,KAAK,GAAG;AACxB,eAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,IAAI,GAAG,KAAK;AAC5C,QAAAA,QAAO,cAAc,MAAM,MAAM,CAAC,GAAG,KAAK,cAAc,GAAI,IAAI;AAAA,MAClE;AAAA,IACF,WAAW,OAAO,UAAU,UAAU;AACpC,UAAI,WAAW;AACf,MAAAA,QAAO,cAAc,MAAM;AAE3B,iBAAW,KAAK,OAAO;AACrB,YAAI,EAAE,OAAO,CAAC,MAAM,KAAK;AACvB,UAAAA,QAAO,MAAM,EAAE,OAAO,CAAC,IAAI,OAAO,MAAM,CAAC,EAAE,SAAS,IAAI;AAAA,QAC1D,OAAO;AACL,qBAAW;AAAA,QACb;AAAA,MACF;AAEA,MAAAA,QAAO,WAAW,MAAM;AAExB,UAAI,UAAU;AACZ,mBAAW,KAAK,OAAO;AACrB,cAAI,MAAM,SAAS;AACjB,YAAAA,QAAO,MAAM,CAAC;AAAA,UAChB,WAAW,MAAM,UAAU;AACzB,YAAAA,QAAO,cAAc,MAAM,CAAC,IAAI;AAAA,UAClC,WAAW,EAAE,OAAO,CAAC,MAAM,KAAK;AAC9B,YAAAA,QAAO,MAAM,MAAM,CAAC,GAAG,GAAG,cAAc,GAAI;AAAA,UAC9C;AAAA,QACF;AACA,QAAAA,SAAQA,KAAI,OAAOA,KAAI,SAAS,CAAC,MAAM,OAAO,cAAc,MAAM,OAAO,MAAM;AAAA,MACjF;AAAA,IACF,OAAO;AACL,MAAAA,QAAO,cAAc,MAAM,MAAM,MAAM,MAAM,SAAS,IAAI,OAAO,MAAM;AAAA,IACzE;AACA,WAAOA;AAAA,EACT;AAEA,MAAI,MAAM;AAEV,aAAW,OAAO,MAAM;AACtB,QAAI,OAAO,OAAO,MAAM,GAAG,GAAG;AAC5B,aAAO,MAAM,KAAK,GAAG,GAAG,KAAK,EAAE;AAAA,IACjC;AAAA,EACF;AAEA,SAAO,MAAM,IAAI,QAAQ,OAAO,GAAG,IAAI,IAAI,QAAQ,UAAU,EAAE;AACjE;",
  "names": ["xml"]
}
