const LS_KEYS = {
  COLLECTION: "collection",
  COOKIE: "cookie",
  ENVIRONMENT: "environment",
  REQUEST: "request",
  REQUEST_EXAMPLE: "requestExample",
  SECURITY_SCHEME: "securityScheme",
  SERVER: "server",
  TAG: "tag",
  WORKSPACE: "workspace"
};
const REFERENCE_LS_KEYS = {
  /**
   * We should remove after some time as we no longer store an object
   * @deprecated
   */
  SELECTED_CLIENT_DEPRECATED: "scalar-reference-selected-client",
  /**
   * Store the selected client as a string in localStorage
   */
  SELECTED_CLIENT: "scalar-reference-selected-client-v2"
};
const CLIENT_LS_KEYS = {
  AUTH: "scalar-client-auth",
  SELECTED_SECURITY_SCHEMES: "scalar-client-selected-security-schemes"
};
const safeLocalStorage = () => typeof window === "undefined" ? {
  getItem: () => null,
  setItem: () => null,
  removeItem: () => null
} : localStorage;
export {
  CLIENT_LS_KEYS,
  LS_KEYS,
  REFERENCE_LS_KEYS,
  safeLocalStorage
};
//# sourceMappingURL=local-storage.js.map
