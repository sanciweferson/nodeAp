{
  "version": 3,
  "sources": ["../../src/utils/validate.ts"],
  "sourcesContent": ["import type { OpenAPI } from '@scalar/openapi-types'\n\nimport { Validator } from '@/lib/Validator/Validator'\nimport type { AnyObject, Filesystem, ThrowOnErrorOption, ValidateResult } from '@/types/index'\nimport { makeFilesystem } from './make-filesystem'\n\nexport type ValidateOptions = ThrowOnErrorOption\n\n/**\n * Validates an OpenAPI document\n */\nexport async function validate(\n  value: string | AnyObject | Filesystem,\n  options?: ValidateOptions,\n): Promise<ValidateResult> {\n  const filesystem = makeFilesystem(value)\n\n  const validator = new Validator()\n  const result = await validator.validate(filesystem, options)\n\n  return {\n    ...result,\n    specification: validator.specification as OpenAPI.Document,\n    version: validator.version,\n  }\n}\n"],
  "mappings": "AAEA,SAAS,iBAAiB;AAE1B,SAAS,sBAAsB;AAO/B,eAAsB,SACpB,OACA,SACyB;AACzB,QAAM,aAAa,eAAe,KAAK;AAEvC,QAAM,YAAY,IAAI,UAAU;AAChC,QAAM,SAAS,MAAM,UAAU,SAAS,YAAY,OAAO;AAE3D,SAAO;AAAA,IACL,GAAG;AAAA,IACH,eAAe,UAAU;AAAA,IACzB,SAAS,UAAU;AAAA,EACrB;AACF;",
  "names": []
}
