{
  "version": 3,
  "sources": ["../../../../src/utils/betterAjvErrors/json/get-meta-from-path.ts"],
  "sourcesContent": ["import { getPointers } from './utils'\n\nexport default function getMetaFromPath(jsonAst, dataPath, includeIdentifierLocation) {\n  const pointers = getPointers(dataPath)\n  const lastPointerIndex = pointers.length - 1\n  return pointers.reduce((obj, pointer, idx) => {\n    switch (obj?.type) {\n      case 'Object': {\n        const filtered = obj.members.filter((child) => child.name.value === pointer)\n        if (filtered.length !== 1) {\n          throw new Error(`Couldn't find property ${pointer} of ${dataPath}`)\n        }\n\n        const { name, value } = filtered[0]\n        return includeIdentifierLocation && idx === lastPointerIndex ? name : value\n      }\n      case 'Array':\n        return obj.elements[pointer]\n      default:\n        // Unexpected type\n        // console.log(obj)\n\n        // Anyway, if there's location, let's just use it.\n        if (obj.loc) {\n          return obj\n        }\n    }\n  }, jsonAst.body)\n}\n"],
  "mappings": "AAAA,SAAS,mBAAmB;AAEb,SAAR,gBAAiC,SAAS,UAAU,2BAA2B;AACpF,QAAM,WAAW,YAAY,QAAQ;AACrC,QAAM,mBAAmB,SAAS,SAAS;AAC3C,SAAO,SAAS,OAAO,CAAC,KAAK,SAAS,QAAQ;AAC5C,YAAQ,KAAK,MAAM;AAAA,MACjB,KAAK,UAAU;AACb,cAAM,WAAW,IAAI,QAAQ,OAAO,CAAC,UAAU,MAAM,KAAK,UAAU,OAAO;AAC3E,YAAI,SAAS,WAAW,GAAG;AACzB,gBAAM,IAAI,MAAM,0BAA0B,OAAO,OAAO,QAAQ,EAAE;AAAA,QACpE;AAEA,cAAM,EAAE,MAAM,MAAM,IAAI,SAAS,CAAC;AAClC,eAAO,6BAA6B,QAAQ,mBAAmB,OAAO;AAAA,MACxE;AAAA,MACA,KAAK;AACH,eAAO,IAAI,SAAS,OAAO;AAAA,MAC7B;AAKE,YAAI,IAAI,KAAK;AACX,iBAAO;AAAA,QACT;AAAA,IACJ;AAAA,EACF,GAAG,QAAQ,IAAI;AACjB;",
  "names": []
}
