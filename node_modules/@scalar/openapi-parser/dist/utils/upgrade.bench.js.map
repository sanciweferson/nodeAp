{
  "version": 3,
  "sources": ["../../src/utils/upgrade.bench.ts"],
  "sourcesContent": ["import { bench, describe, expect } from 'vitest'\n\n// import { upgrade as upgradeOld } from './slow/upgrade'\n// import { upgradeFromTwoToThree as upgradeFromTwoToThreeOld } from './slow/upgradeFromTwoToThree'\nimport { upgrade } from './upgrade'\nimport { upgradeFromTwoToThree } from './upgrade-from-two-to-three'\n\n// Setup the test data\nconst STRIPE = await fetch(\n  'https://raw.githubusercontent.com/stripe/openapi/refs/heads/master/openapi/spec3.json',\n).then((r) => r.json())\n\nconst PETSTORE = await fetch('https://petstore.swagger.io/v2/swagger.json').then((r) => r.json())\n\ndescribe('upgrade', () => {\n  describe('Petstore: Swagger 2.0 to OpenAPI 3.0', () => {\n    bench('new', () => {\n      expect(PETSTORE.swagger).toBe('2.0')\n\n      const result = upgradeFromTwoToThree({ ...PETSTORE })\n\n      expect(result.openapi).toBe('3.0.4')\n    })\n\n    // bench('old', () => {\n    //   expect(PETSTORE.swagger).toBe('2.0')\n\n    //   const result = upgradeFromTwoToThreeOld({ ...PETSTORE })\n\n    //   expect(result.openapi).toBe('3.0.4')\n    // })\n  })\n\n  describe('Stripe: OpenAPI 3.0 to 3.1', () => {\n    bench('new', () => {\n      expect(STRIPE.openapi).toBe('3.0.0')\n\n      const { specification } = upgrade(JSON.stringify(STRIPE))\n\n      expect(specification?.openapi).toBe('3.1.1')\n    })\n\n    // bench('old', () => {\n    //   expect(STRIPE.openapi).toBe('3.0.0')\n\n    //   const { specification } = upgradeOld(JSON.stringify(STRIPE))\n\n    //   expect(specification?.openapi).toBe('3.1.1')\n    // })\n  })\n\n  describe('Petstore: Swagger 2.0 to OpenAPI 3.1', () => {\n    bench('new', () => {\n      expect(PETSTORE.swagger).toBe('2.0')\n\n      const { specification } = upgrade(JSON.stringify(PETSTORE))\n\n      expect(specification?.openapi).toBe('3.1.1')\n    })\n\n    // bench('old', () => {\n    //   expect(PETSTORE.swagger).toBe('2.0')\n\n    //   const { specification } = upgradeOld(JSON.stringify(PETSTORE))\n\n    //   expect(specification?.openapi).toBe('3.1.1')\n    // })\n  })\n})\n"],
  "mappings": "AAAA,SAAS,OAAO,UAAU,cAAc;AAIxC,SAAS,eAAe;AACxB,SAAS,6BAA6B;AAGtC,MAAM,SAAS,MAAM;AAAA,EACnB;AACF,EAAE,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC;AAEtB,MAAM,WAAW,MAAM,MAAM,6CAA6C,EAAE,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC;AAEhG,SAAS,WAAW,MAAM;AACxB,WAAS,wCAAwC,MAAM;AACrD,UAAM,OAAO,MAAM;AACjB,aAAO,SAAS,OAAO,EAAE,KAAK,KAAK;AAEnC,YAAM,SAAS,sBAAsB,EAAE,GAAG,SAAS,CAAC;AAEpD,aAAO,OAAO,OAAO,EAAE,KAAK,OAAO;AAAA,IACrC,CAAC;AAAA,EASH,CAAC;AAED,WAAS,8BAA8B,MAAM;AAC3C,UAAM,OAAO,MAAM;AACjB,aAAO,OAAO,OAAO,EAAE,KAAK,OAAO;AAEnC,YAAM,EAAE,cAAc,IAAI,QAAQ,KAAK,UAAU,MAAM,CAAC;AAExD,aAAO,eAAe,OAAO,EAAE,KAAK,OAAO;AAAA,IAC7C,CAAC;AAAA,EASH,CAAC;AAED,WAAS,wCAAwC,MAAM;AACrD,UAAM,OAAO,MAAM;AACjB,aAAO,SAAS,OAAO,EAAE,KAAK,KAAK;AAEnC,YAAM,EAAE,cAAc,IAAI,QAAQ,KAAK,UAAU,QAAQ,CAAC;AAE1D,aAAO,eAAe,OAAO,EAAE,KAAK,OAAO;AAAA,IAC7C,CAAC;AAAA,EASH,CAAC;AACH,CAAC;",
  "names": []
}
