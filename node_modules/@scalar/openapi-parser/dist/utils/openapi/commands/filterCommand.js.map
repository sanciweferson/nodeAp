{
  "version": 3,
  "sources": ["../../../../src/utils/openapi/commands/filterCommand.ts"],
  "sourcesContent": ["import type { FilterResult, Queue, Task } from '@/types/index'\nimport type { DereferenceOptions } from '@/utils/dereference'\nimport type { FilterCallback } from '@/utils/filter'\nimport { details } from '../actions/details'\nimport { files } from '../actions/files'\nimport { get } from '../actions/get'\nimport { toJson } from '../actions/toJson'\nimport { toYaml } from '../actions/toYaml'\nimport { queueTask } from '../utils/queueTask'\nimport { dereferenceCommand } from './dereferenceCommand'\n\ndeclare global {\n  interface Commands {\n    filter: {\n      task: {\n        name: 'filter'\n        options?: FilterCallback\n      }\n      result: FilterResult\n    }\n  }\n}\n\n/**\n * Filter the given OpenAPI document\n */\nexport function filterCommand<T extends Task[]>(previousQueue: Queue<T>, options?: FilterCallback) {\n  const task: Task = {\n    name: 'filter',\n    options,\n  }\n\n  const queue = queueTask<[...T, typeof task]>(previousQueue, task as Task)\n\n  return {\n    dereference: (dereferenceOptions?: DereferenceOptions) => dereferenceCommand(queue, dereferenceOptions),\n    details: () => details(queue),\n    files: () => files(queue),\n    get: () => get(queue),\n    toJson: () => toJson(queue),\n    toYaml: () => toYaml(queue),\n  }\n}\n"],
  "mappings": "AAGA,SAAS,eAAe;AACxB,SAAS,aAAa;AACtB,SAAS,WAAW;AACpB,SAAS,cAAc;AACvB,SAAS,cAAc;AACvB,SAAS,iBAAiB;AAC1B,SAAS,0BAA0B;AAiB5B,SAAS,cAAgC,eAAyB,SAA0B;AACjG,QAAM,OAAa;AAAA,IACjB,MAAM;AAAA,IACN;AAAA,EACF;AAEA,QAAM,QAAQ,UAA+B,eAAe,IAAY;AAExE,SAAO;AAAA,IACL,aAAa,CAAC,uBAA4C,mBAAmB,OAAO,kBAAkB;AAAA,IACtG,SAAS,MAAM,QAAQ,KAAK;AAAA,IAC5B,OAAO,MAAM,MAAM,KAAK;AAAA,IACxB,KAAK,MAAM,IAAI,KAAK;AAAA,IACpB,QAAQ,MAAM,OAAO,KAAK;AAAA,IAC1B,QAAQ,MAAM,OAAO,KAAK;AAAA,EAC5B;AACF;",
  "names": []
}
