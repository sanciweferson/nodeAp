{
  "version": 3,
  "sources": ["../../src/utils/upgrade.ts"],
  "sourcesContent": ["import type { OpenAPIV3_1 } from '@scalar/openapi-types'\n\nimport type { AnyObject, Filesystem, UpgradeResult } from '@/types/index'\nimport type { UnknownObject } from '@scalar/types/utils'\nimport { getEntrypoint } from './get-entrypoint'\nimport { isFilesystem } from './is-filesystem'\nimport { normalize } from './normalize'\nimport { upgradeFromThreeToThreeOne } from './upgrade-from-three-to-three-one'\nimport { upgradeFromTwoToThree } from './upgrade-from-two-to-three'\n\nconst upgraders = [\n  // Swagger 2.0 -> OpenAPI 3.0\n  upgradeFromTwoToThree,\n  // OpenAPI 3.0 -> OpenAPI 3.1\n  upgradeFromThreeToThreeOne,\n]\n\n/**\n * Upgrade specification to OpenAPI 3.1.0\n */\nexport function upgrade(value: string | AnyObject | Filesystem): UpgradeResult<OpenAPIV3_1.Document> {\n  if (!value) {\n    return {\n      specification: null,\n      version: '3.1',\n    }\n  }\n\n  // TODO: Run upgrade over the whole filesystem\n  const result = upgraders.reduce(\n    (currentSpecification, upgrader) => upgrader(currentSpecification as UnknownObject),\n    isFilesystem(value) ? getEntrypoint(value).specification : normalize(value),\n  ) as OpenAPIV3_1.Document\n\n  return {\n    specification: result,\n    // TODO: Make dynamic\n    version: '3.1',\n  } as UpgradeResult<OpenAPIV3_1.Document>\n}\n"],
  "mappings": "AAIA,SAAS,qBAAqB;AAC9B,SAAS,oBAAoB;AAC7B,SAAS,iBAAiB;AAC1B,SAAS,kCAAkC;AAC3C,SAAS,6BAA6B;AAEtC,MAAM,YAAY;AAAA;AAAA,EAEhB;AAAA;AAAA,EAEA;AACF;AAKO,SAAS,QAAQ,OAA6E;AACnG,MAAI,CAAC,OAAO;AACV,WAAO;AAAA,MACL,eAAe;AAAA,MACf,SAAS;AAAA,IACX;AAAA,EACF;AAGA,QAAM,SAAS,UAAU;AAAA,IACvB,CAAC,sBAAsB,aAAa,SAAS,oBAAqC;AAAA,IAClF,aAAa,KAAK,IAAI,cAAc,KAAK,EAAE,gBAAgB,UAAU,KAAK;AAAA,EAC5E;AAEA,SAAO;AAAA,IACL,eAAe;AAAA;AAAA,IAEf,SAAS;AAAA,EACX;AACF;",
  "names": []
}
