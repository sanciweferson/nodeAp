{
  "version": 3,
  "sources": ["../../../src/plugins/read-files/read-files.ts"],
  "sourcesContent": ["import fs from 'node:fs'\n\nimport { ERRORS } from '@/configuration'\nimport { dirname, join } from '@/polyfills/path'\nimport { isJson } from '@/utils/is-json'\nimport { isYaml } from '@/utils/is-yaml'\nimport type { LoadPlugin } from '@/utils/load/load'\n\nexport const readFiles: () => LoadPlugin = () => {\n  return {\n    check(value?: any) {\n      // Not a string\n      if (typeof value !== 'string') {\n        return false\n      }\n\n      // URL\n      if (value.startsWith('http://') || value.startsWith('https://')) {\n        return false\n      }\n\n      // Line breaks\n      if (value.includes('\\n')) {\n        return false\n      }\n\n      // JSON\n      if (isJson(value)) {\n        return false\n      }\n\n      // YAML (run through YAML.parse)\n      if (isYaml(value)) {\n        return false\n      }\n\n      return true\n    },\n    async get(value?: any) {\n      if (!fs.existsSync(value)) {\n        throw new Error(ERRORS.FILE_DOES_NOT_EXIST.replace('%s', value))\n      }\n\n      try {\n        return fs.readFileSync(value, 'utf-8')\n      } catch (error) {\n        console.error('[readFiles]', error)\n        return false\n      }\n    },\n    resolvePath(value: any, reference: string) {\n      const dir = dirname(value)\n      return join(dir, reference)\n    },\n    getDir(value: any) {\n      return dirname(value)\n    },\n    getFilename(value: any) {\n      return value.split('/').pop()\n    },\n  }\n}\n"],
  "mappings": "AAAA,OAAO,QAAQ;AAEf,SAAS,cAAc;AACvB,SAAS,SAAS,YAAY;AAC9B,SAAS,cAAc;AACvB,SAAS,cAAc;AAGhB,MAAM,YAA8B,MAAM;AAC/C,SAAO;AAAA,IACL,MAAM,OAAa;AAEjB,UAAI,OAAO,UAAU,UAAU;AAC7B,eAAO;AAAA,MACT;AAGA,UAAI,MAAM,WAAW,SAAS,KAAK,MAAM,WAAW,UAAU,GAAG;AAC/D,eAAO;AAAA,MACT;AAGA,UAAI,MAAM,SAAS,IAAI,GAAG;AACxB,eAAO;AAAA,MACT;AAGA,UAAI,OAAO,KAAK,GAAG;AACjB,eAAO;AAAA,MACT;AAGA,UAAI,OAAO,KAAK,GAAG;AACjB,eAAO;AAAA,MACT;AAEA,aAAO;AAAA,IACT;AAAA,IACA,MAAM,IAAI,OAAa;AACrB,UAAI,CAAC,GAAG,WAAW,KAAK,GAAG;AACzB,cAAM,IAAI,MAAM,OAAO,oBAAoB,QAAQ,MAAM,KAAK,CAAC;AAAA,MACjE;AAEA,UAAI;AACF,eAAO,GAAG,aAAa,OAAO,OAAO;AAAA,MACvC,SAAS,OAAO;AACd,gBAAQ,MAAM,eAAe,KAAK;AAClC,eAAO;AAAA,MACT;AAAA,IACF;AAAA,IACA,YAAY,OAAY,WAAmB;AACzC,YAAM,MAAM,QAAQ,KAAK;AACzB,aAAO,KAAK,KAAK,SAAS;AAAA,IAC5B;AAAA,IACA,OAAO,OAAY;AACjB,aAAO,QAAQ,KAAK;AAAA,IACtB;AAAA,IACA,YAAY,OAAY;AACtB,aAAO,MAAM,MAAM,GAAG,EAAE,IAAI;AAAA,IAC9B;AAAA,EACF;AACF;",
  "names": []
}
