{
  "version": 3,
  "sources": ["../../../src/plugins/fetch-urls/fetch-urls.ts"],
  "sourcesContent": ["import type { LoadPlugin } from '@/utils/load/load'\n\nexport const fetchUrlsDefaultConfiguration = {\n  limit: 20,\n}\n\nexport const fetchUrls: (customConfiguration?: {\n  /**\n   * Limit the number of requests. Set to `false` to disable the limit.\n   */\n  limit?: number | false\n  /**\n   * Fetch function to use instead of the global fetch. Use this to intercept requests.\n   */\n  fetch?: (url: string) => Promise<Response>\n}) => LoadPlugin = (customConfiguration) => {\n  // State\n  let numberOfRequests = 0\n\n  // Configuration\n  const configuration = {\n    ...fetchUrlsDefaultConfiguration,\n    ...customConfiguration,\n  }\n\n  return {\n    check(value?: any) {\n      // Not a string\n      if (typeof value !== 'string') {\n        return false\n      }\n\n      // Not http/https\n      if (!value.startsWith('http://') && !value.startsWith('https://')) {\n        return false\n      }\n\n      return true\n    },\n    async get(value?: any) {\n      // Limit ht enumber of requests\n      if (configuration?.limit !== false && numberOfRequests >= configuration?.limit) {\n        console.warn(`[fetchUrls] Maximum number of requests reeached (${configuration?.limit}), skipping request`)\n        return undefined\n      }\n\n      try {\n        numberOfRequests++\n\n        const response = await (configuration?.fetch ? configuration.fetch(value) : fetch(value))\n\n        return await response.text()\n      } catch (error) {\n        console.error('[fetchUrls]', error.message, `(${value})`)\n        return undefined\n      }\n    },\n  }\n}\n"],
  "mappings": "AAEO,MAAM,gCAAgC;AAAA,EAC3C,OAAO;AACT;AAEO,MAAM,YASM,CAAC,wBAAwB;AAE1C,MAAI,mBAAmB;AAGvB,QAAM,gBAAgB;AAAA,IACpB,GAAG;AAAA,IACH,GAAG;AAAA,EACL;AAEA,SAAO;AAAA,IACL,MAAM,OAAa;AAEjB,UAAI,OAAO,UAAU,UAAU;AAC7B,eAAO;AAAA,MACT;AAGA,UAAI,CAAC,MAAM,WAAW,SAAS,KAAK,CAAC,MAAM,WAAW,UAAU,GAAG;AACjE,eAAO;AAAA,MACT;AAEA,aAAO;AAAA,IACT;AAAA,IACA,MAAM,IAAI,OAAa;AAErB,UAAI,eAAe,UAAU,SAAS,oBAAoB,eAAe,OAAO;AAC9E,gBAAQ,KAAK,oDAAoD,eAAe,KAAK,qBAAqB;AAC1G,eAAO;AAAA,MACT;AAEA,UAAI;AACF;AAEA,cAAM,WAAW,OAAO,eAAe,QAAQ,cAAc,MAAM,KAAK,IAAI,MAAM,KAAK;AAEvF,eAAO,MAAM,SAAS,KAAK;AAAA,MAC7B,SAAS,OAAO;AACd,gBAAQ,MAAM,eAAe,MAAM,SAAS,IAAI,KAAK,GAAG;AACxD,eAAO;AAAA,MACT;AAAA,IACF;AAAA,EACF;AACF;",
  "names": []
}
