import type { JSONSchema, JSONSchemaGenerator } from "zod/v4/core";
import { $ZodRegistry, $ZodType } from "zod/v4/core";
import type { OASVersion } from "../esm/json-to-oas.js";
export interface ZodToJsonConfig {
	target?: JSONSchemaGenerator["target"];
}
export declare const zodSchemaToJson: (zodSchema: $ZodType, registry: $ZodRegistry<{
	id?: string;
}>, io: "input" | "output", oasVersion: OASVersion, config?: ZodToJsonConfig) => JSONSchema.BaseSchema;
export declare const zodRegistryToJson: (registry: $ZodRegistry<{
	id?: string;
}>, io: "input" | "output", config?: ZodToJsonConfig) => Record<string, JSONSchema.BaseSchema>;
